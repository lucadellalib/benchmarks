# ############################################################################
# Model: Transformer with HuBERT semantic tokens (K-means: LJSpeech, vocoder: LJSpeech)
# Authors: Luca Della Libera 2024
# ############################################################################

experiment_name: discrete_hubert_ljspeech_ljspeech_transformer

# Seed needs to be set at top of YAML
seed: 4321
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data preparation
data_folder: !PLACEHOLDER
train_json: !ref <save_folder>/train.json
valid_json: !ref <save_folder>/valid.json
test_json: !ref <save_folder>/test.json
splits: [train, valid, test]
split_ratio: [80, 10, 10]

# Output folders
output_folder: !ref results/<experiment_name>/<seed>
save_folder: !ref <output_folder>/save

# Save options
vocode: True
save_audios: True

# Preprocessing parameters
train_remove_if_longer: 60.0  # Seconds
valid_remove_if_longer: 60.0  # Seconds
test_remove_if_longer: 60.0  # Seconds
sorting: ascending

# Training parameters
num_epochs: 40
grad_accumulation_factor: 1
dynamic_batching: False
train_batch_size: 8
valid_batch_size: 8
test_batch_size: 8
train_max_batch_length: 40.0  # Seconds
valid_max_batch_length: 40.0  # Seconds
test_max_batch_length: 40.0  # Seconds
num_buckets: 40
max_batch_size: 128
dataloader_workers: 4
nonfinite_patience: 10
max_grad_norm: 5.0
precision: fp16
ckpt_interval_minutes: 60
keep_checkpoints: 4
augment: True
augment_prob: 0.75

# Optimizer parameters
lr: 0.0005
weight_decay: 0.01
improvement_threshold: 0.0025
annealing_factor: 0.9
patient: 0
enable_scheduler: True

# Discrete SSL parameters
sample_rate: 16000
vocab_size: 1000
layer_ids: [3, 7, 12, 18, 23]
num_codebooks: 5
kmeans_dataset: LJSpeech
vocoder_source: chaanks/hifigan-unit-hubert-ll60k-l3-7-12-18-23-k1000-ljspeech-ljspeech

# Encoder parameters
embedding_dim: 256
dropout: 0.1
activation: !name:torch.nn.GELU
d_model: 256
nhead: 4
num_layers: 6
d_ffn: 2048
max_length: 5000
encoder_module: transformer

# Search parameters
valid_search_freq: 2

# Augmentation
drop_freq: !new:speechbrain.augment.time_domain.DropFreq
    drop_freq_low: 0  # Min frequency band dropout probability
    drop_freq_high: 1  # Max frequency band dropout probability
    drop_freq_count_low: 1  # Min number of frequency bands to drop
    drop_freq_count_high: 3  # Max number of frequency bands to drop
    drop_freq_width: 0.05  # Width of frequency bands to drop

drop_chunk: !new:speechbrain.augment.time_domain.DropChunk
    drop_length_low: 1  # Min number of audio chunks to drop
    drop_length_high: 5  # Max number of audio chunks to drop
    drop_count_low: 1000  # Min length of audio chunks to drop
    drop_count_high: 2000  # Max length of audio chunks to drop

augmentation: !new:speechbrain.augment.augmenter.Augmenter
    parallel_augment: False
    concat_original: False
    repeat_augment: 1
    shuffle_augmentations: False
    min_augmentations: 2
    max_augmentations: 2
    augment_prob: !ref <augment_prob>
    augmentations: [!ref <drop_freq>, !ref <drop_chunk>]

# Modules
# Discrete SSL model
codec: !new:speechbrain.lobes.models.huggingface_transformers.discrete_ssl.DiscreteSSL
    ssl_model: !new:speechbrain.lobes.models.huggingface_transformers.hubert.HuBERT
        source: facebook/hubert-large-ll60k
        save_path: !ref <save_folder>
        output_norm: False
        freeze: True
        freeze_feature_extractor: True
        apply_spec_augment: False
        output_all_hiddens: True
    save_path: !ref <save_folder>
    kmeans_dataset: !ref <kmeans_dataset>
    kmeans_repo_id: poonehmousavi/SSL_Quantization
    num_clusters: !ref <vocab_size>

# Discrete SSL vocoder
vocoder: !apply:speechbrain.inference.vocoders.UnitHIFIGAN.from_hparams
    source: !ref <vocoder_source>
    savedir: !ref <save_folder>/vocoder

embedding: !new:torch.nn.Embedding
    num_embeddings: !ref <vocab_size> * <num_codebooks>
    embedding_dim: !ref <embedding_dim>

attention_mlp: !new:models.AttentionMLP
    input_dim: !ref <embedding_dim>
    hidden_dim: !ref <embedding_dim>

encoder: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR
    input_size: !ref <embedding_dim>
    tgt_vocab: -1
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_layers>
    num_decoder_layers: 0
    d_ffn: !ref <d_ffn>
    dropout: !ref <dropout>
    activation: !ref <activation>
    max_length: !ref <max_length>
    encoder_module: !ref <encoder_module>
    normalize_before: True
    causal: False

ce_head: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <vocab_size> * <num_codebooks>

modules:
    embedding: !ref <embedding>
    attention_mlp: !ref <attention_mlp>
    encoder: !ref <encoder>
    ce_head: !ref <ce_head>

model: !new:torch.nn.ModuleList
    [[!ref <embedding>,
      !ref <attention_mlp>,
      !ref <encoder>,
      !ref <ce_head>]]

# Loss functions
ce_loss: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.0
    allowed_len_diff: 0
    reduction: mean

# Optimizers
opt_class: !name:torch.optim.AdamW
    lr: !ref <lr>
    betas: (0.9, 0.98)
    eps: 1.e-8
    weight_decay: !ref <weight_decay>

# Schedulers
scheduler: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: !ref <improvement_threshold>
    annealing_factor: !ref <annealing_factor>
    patient: !ref <patient>

# Performance metrics
ter_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

# Counters, checkpointers, loggers, etc.
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <num_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        scheduler: !ref <scheduler>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <output_folder>/train_log.txt
